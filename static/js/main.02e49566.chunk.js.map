{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/ImageGallery/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","services/images-api.js","App.js","index.js"],"names":["Searchbar","state","query","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","className","this","type","onChange","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","id","webformatURL","src","alt","ImageGallery","images","map","image","Button","onClick","searchQuery","currentPage","axios","get","then","response","data","hits","App","isLoading","onChangeQuery","fetchImages","imagesApi","prevState","console","log","prevProps","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kTA2CeA,E,4MAvCbC,MAAQ,CACNC,MAAO,I,EAGTC,aAAe,SAAAC,GACb,EAAKC,SAAS,CAAEH,MAAOE,EAAEE,cAAcC,S,EAGzCC,aAAe,SAAAJ,GACbA,EAAEK,iBACF,EAAKC,MAAMC,SAAS,EAAKV,MAAMC,OAC/B,EAAKG,SAAS,CAAEH,MAAO,M,4CAGzB,WACE,OACE,8BACE,wBAAQU,UAAU,YAAlB,SACE,uBAAMA,UAAU,aAAaD,SAAUE,KAAKL,aAA5C,UACE,wBAAQM,KAAK,SAASF,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACEA,UAAU,mBACVE,KAAK,OACLP,MAAOM,KAAKZ,MAAMC,MAClBa,SAAUF,KAAKV,aACfa,aAAa,MACbC,WAAS,EACTC,YAAY,wC,GA/BFC,aCKTC,G,KANU,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAP,OACvB,oBAAaV,UAAU,mBAAvB,SACE,qBAAKW,IAAKD,EAAcE,IAAI,GAAGZ,UAAU,4BADlCS,KCcII,EAdM,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtB,OACE,oBAAId,UAAU,eAAd,SACGc,EAAOC,KAAI,SAAAC,GAAK,OACf,cAAC,EAAD,CACEP,GAAIO,EAAMP,GAEVC,aAAcM,EAAMN,cADfM,EAAMP,UCDNQ,G,MAND,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACZ,OACI,wBAAQhB,KAAK,SAASF,UAAU,SAASkB,QAAS,kBAAMA,KAAxD,yB,iBCcO,EATK,SAAC,GAA2C,IAAD,IAAxCC,mBAAwC,MAA1B,GAA0B,MAAtBC,mBAAsB,MAAR,EAAQ,EAC7D,OAAOC,IACJC,IADI,UANQ,2BAMR,cAEcH,EAFd,iBAEkCC,EAFlC,sBALO,qCAKP,uBAJQ,QAIR,wBAHW,aAGX,iBAKJG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,SCsDrBC,E,4MA5DbtC,MAAQ,CACNyB,OAAQ,GACRM,YAAa,EACbD,YAAa,GACbS,WAAW,G,EAgBbC,cAAgB,SAAAvC,GACd,EAAKG,SAAS,CAAE0B,YAAa7B,EAAO8B,YAAa,EAAGN,OAAQ,M,EAY9DgB,YAAc,WACZ,MAAqC,EAAKzC,MAAlC+B,EAAR,EAAQA,YAAaD,EAArB,EAAqBA,YAErBY,EADgB,CAAEX,cAAaD,gBACAI,MAAK,SAAAG,GAClC,EAAKjC,UAAS,SAAAuC,GAAS,MAAK,CAC1BlB,OAAO,GAAD,mBAAMkB,EAAUlB,QAAhB,YAA2BY,IACjCN,YAAaY,EAAUZ,YAAc,MAEvCa,QAAQC,IAAI,EAAK7C,W,uDAlCrB,c,gCAOA,SAAmB8C,EAAWH,GACxBA,EAAUb,cAAgBlB,KAAKZ,MAAM8B,aACvClB,KAAK6B,gB,oBA6BT,WACE,IAAQhB,EAAWb,KAAKZ,MAAhByB,OACR,OACE,gCACE,cAAC,EAAD,CAAWf,SAAUE,KAAK4B,gBAC1B,cAAC,EAAD,CAAcf,OAAQA,IAErBA,EAAOsB,OAAS,GAAK,cAAC,EAAD,CAAQlB,QAASjB,KAAK6B,qB,GArDlCvB,a,MCHlB8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.02e49566.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport './Searchbar.scss';\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    query: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ query: e.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.query);\r\n    this.setState({ query: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header className=\"Searchbar\">\r\n          <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n            <button type=\"submit\" className=\"SearchForm-button\">\r\n              <span className=\"SearchForm-button-label\">Search</span>\r\n            </button>\r\n\r\n            <input\r\n              className=\"SearchForm-input\"\r\n              type=\"text\"\r\n              value={this.state.query}\r\n              onChange={this.handleChange}\r\n              autoComplete=\"off\"\r\n              autoFocus\r\n              placeholder=\"Search images and photos\"\r\n            />\r\n          </form>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n\r\n// export const BASE_URL = 'https://pixabay.com/api/';\r\n// export const API_KEY = '20667808-d6e3a4866a107921c5b89b931';\r\n","import './ImageGallery.scss';\r\n\r\nconst ImageGalleryItem = ({ id, webformatURL }) => (\r\n  <li key={id} className=\"ImageGalleryItem\">\r\n    <img src={webformatURL} alt=\"\" className=\"ImageGalleryItem-image\" />\r\n  </li>\r\n);\r\n\r\nexport default ImageGalleryItem;\r\n","import ImageGalleryItem from './ImageGalleryItem';\r\nimport './ImageGallery.scss';\r\n\r\nconst ImageGallery = ({ images }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map(image => (\r\n        <ImageGalleryItem\r\n          id={image.id}\r\n          key={image.id}\r\n          webformatURL={image.webformatURL}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ImageGallery;\r\n","import './Button.scss'\r\n\r\nconst Button =({onClick}) => {\r\n    return (\r\n        <button type='button' className=\"Button\" onClick={() => onClick()}>Load more</button>\r\n    )\r\n}\r\n\r\nexport default Button","import axios from 'axios';\r\n\r\n// axios.defaults.headers.common['Authorization'] = 'Bearer 20667808-d6e3a4866a107921c5b89b931';\r\n\r\nconst BASE_URL = 'https://pixabay.com/api/';\r\nconst API_KEY = '20667808-d6e3a4866a107921c5b89b931';\r\nconst IMG_TYPE = 'photo';\r\nconst ORIENTATION = 'horizontal';\r\n\r\nconst fetchImages = ({ searchQuery = '', currentPage = 1 }) => {\r\n  return axios\r\n    .get(\r\n      `${BASE_URL}?q=${searchQuery}&page=${currentPage}\r\n    &key=${API_KEY}&image_type=${IMG_TYPE}&orientation=${ORIENTATION}&per_page=12`,\r\n    )\r\n    .then(response => response.data.hits);\r\n};\r\n\r\nexport default { fetchImages };\r\n","import { Component } from 'react';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Button from './components/Button/Button';\nimport imagesApi from './services/images-api';\n\n\n\nclass App extends Component {\n  state = {\n    images: [],\n    currentPage: 1,\n    searchQuery: '',\n    isLoading: false,\n  };\n\n  componentDidMount() {\n    // axios.get('https://pixabay.com/api/?key=20667808-d6e3a4866a107921c5b89b931&q=yellow+flowers')\n    //   .then(response => {\n    //     this.setState({ images: response.data.hits })\n    //   })\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchImages();\n    }\n  }\n\n  onChangeQuery = query => {\n    this.setState({ searchQuery: query, currentPage: 1, images: [] });\n  };\n\n  // fetchImages =() => {\n  //    const {currentPage, searchQuery } = this.state\n  //   axios.get(`${BASE_URL}?q=${searchQuery}&page=${currentPage}&key=${API_KEY}&image_type=${IMG_TYPE}&orientation=${ORIENTATION}&per_page=12`)\n  //     .then(response => {\n  //       this.setState(prevState => ({ images: [...prevState.images, ...response.data.hits], currentPage: prevState.currentPage +1 }))\n  //       console.log(this.state);\n  //     })\n  // }\n\n  fetchImages = () => {\n    const { currentPage, searchQuery } = this.state;\n    const options = { currentPage, searchQuery};\n    imagesApi.fetchImages(options).then(hits => {\n      this.setState(prevState => ({\n        images: [...prevState.images, ...hits],\n        currentPage: prevState.currentPage + 1,\n      }));\n      console.log(this.state);\n    });\n  };\n\n  render() {\n    const { images } = this.state;\n    return (\n      <div>\n        <Searchbar onSubmit={this.onChangeQuery} />\n        <ImageGallery images={images} />\n\n        {images.length > 0 && <Button onClick={this.fetchImages} />}\n\n        {/* <button type='button' className=\"Button\" onClick={this.fetchImages}>Load more</button> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}